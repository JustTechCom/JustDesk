name: Deploy to Render

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  docker-build-push:
    if: github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./packages/backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/justdesk-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/justdesk-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./packages/frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/justdesk-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/justdesk-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

  trigger-render-deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Trigger Render Backend Deploy
      if: ${{ secrets.RENDER_BACKEND_HOOK }}
      run: |
        curl -X POST "${{ secrets.RENDER_BACKEND_HOOK }}" \
          -H "Content-Type: application/json" \
          -d '{"ref": "main"}'

    - name: Trigger Render Frontend Deploy  
      if: ${{ secrets.RENDER_FRONTEND_HOOK }}
      run: |
        curl -X POST "${{ secrets.RENDER_FRONTEND_HOOK }}" \
          -H "Content-Type: application/json" \
          -d '{"ref": "main"}'

    - name: Wait for deployment
      run: |
        echo "Waiting for Render deployment to complete..."
        sleep 30

    - name: Health Check
      run: |
        # Backend health check
        if [ -n "${{ secrets.BACKEND_URL }}" ]; then
          echo "Checking backend health..."
          for i in {1..10}; do
            if curl -f "${{ secrets.BACKEND_URL }}/api/health" > /dev/null 2>&1; then
              echo "✅ Backend is healthy"
              break
            else
              echo "⏳ Waiting for backend... ($i/10)"
              sleep 10
            fi
          done
        fi
        
        # Frontend health check
        if [ -n "${{ secrets.FRONTEND_URL }}" ]; then
          echo "Checking frontend health..."
          for i in {1..10}; do
            if curl -f "${{ secrets.FRONTEND_URL }}" > /dev/null 2>&1; then
              echo "✅ Frontend is healthy"
              break
            else
              echo "⏳ Waiting for frontend... ($i/10)"
              sleep 10
            fi
          done
        fi

  notify:
    needs: [docker-build-push, trigger-render-deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify Slack
      if: ${{ secrets.SLACK_WEBHOOK }}
      run: |
        STATUS="${{ needs.trigger-render-deploy.result }}"
        if [ "$STATUS" = "success" ]; then
          COLOR="good"
          MESSAGE="✅ JustDesk successfully deployed to Render!"
        else
          COLOR="danger"  
          MESSAGE="❌ JustDesk deployment to Render failed!"
        fi
        
        curl -X POST "${{ secrets.SLACK_WEBHOOK }}" \
          -H "Content-Type: application/json" \
          -d "{
            \"attachments\": [{
              \"color\": \"$COLOR\",
              \"title\": \"JustDesk Deployment\",
              \"text\": \"$MESSAGE\",
              \"fields\": [
                {\"title\": \"Branch\", \"value\": \"${{ github.ref_name }}\", \"short\": true},
                {\"title\": \"Commit\", \"value\": \"${{ github.sha }}\", \"short\": true}
              ]
            }]
          }"

    - name: Notify Discord
      if: ${{ secrets.DISCORD_WEBHOOK }}
      run: |
        STATUS="${{ needs.trigger-render-deploy.result }}"
        if [ "$STATUS" = "success" ]; then
          MESSAGE="✅ **JustDesk** successfully deployed to Render!"
        else
          MESSAGE="❌ **JustDesk** deployment to Render failed!"
        fi
        
        curl -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
          -H "Content-Type: application/json" \
          -d "{
            \"content\": \"$MESSAGE\",
            \"embeds\": [{
              \"title\": \"Deployment Status\",
              \"description\": \"Branch: \`${{ github.ref_name }}\`\\nCommit: \`${{ github.sha }}\`\",
              \"color\": $([ "$STATUS" = "success" ] && echo "65280" || echo "16711680")
            }]
          }"